name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: coding_assistant_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install Dependencies
      run: |
        cd frontend && npm install
        cd ../backend && npm install

    - name: Run Tests
      run: |
        cd frontend && npm test
        cd ../backend && npm test
      env:
        DATABASE_URL: postgresql://user:password@localhost:5432/coding_assistant_test
        JWT_SECRET: test_secret
        NODE_ENV: test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v2

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./frontend

    - name: Deploy to Render
      uses: render-actions/deploy@v1
      with:
        api-key: ${{ secrets.RENDER_API_KEY }}
        service-id: ${{ secrets.RENDER_SERVICE_ID }}
        working-directory: ./backend 